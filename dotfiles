#!/usr/bin/env bash

COMMAND="satisfy"
FULLHOST=$(hostname -f)
DOTFILEDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Check if bork repo exists
if [[ -z $(command -v "bork") ]]; then
    echo "missing: bork"
    echo "Make sure to install bork before trying to bootstrap the dotfiles: $ brew install bork"
    exit 1
fi

# Check arguments
if [[ -z ${1} ]]; then
    # If no 2nd argument => use bootstrap borkfile
    bork ${COMMAND} ${DOTFILEDIR}/borkfiles/_.bork

    # Host specific
    if [ "$(ls ${DOTFILEDIR}/hostnames/${FULLHOST}/borkfiles 2> /dev/null)" ]; then
      # Change into the host specific borkfile folder. Hack to avoid bork appending the fullpath a second time
      echo "info: found host-specific bork files for \"${FULLHOST}\""
      for file in ${DOTFILEDIR}/hostnames/${FULLHOST}/borkfiles/*; do
        # Execute without location paths
        bork ${COMMAND} "${file}"
      done
    fi
else
    # Otherwise, install use the specific borkfile(s)
    BORKFILES=${@:1}
    # For each specified borkfile
    for BORK in ${BORKFILES}; do
        if [[ -f ${DOTFILEDIR}/borkfiles/${BORK}.bork ]]; then
            # Expand to actual path of borkfile, append to $BORKFILESTRING
            BORKFILESTRING+=" ${DOTFILEDIR}/borkfiles/${BORK}.bork"
        # If host specific, use that one instead
        elif [[ -f ${DOTFILEDIR}/hostnames/${FULLHOST}/borkfiles/${BORK}.bork ]]; then
            # Expand to actual path of borkfile, append to $BORKFILESTRING
            echo "info: found host-specific bork files for \"${FULLHOST}\""
            BORKFILESTRING+=" ${DOTFILEDIR}/hostnames/${FULLHOST}/borkfiles/${BORK}.bork"
        else
            echo "Error: couldn't find borkfile \"${BORK}.bork\" :("
        fi
    done
    # Check if we have found at least one valid borkfile
    if [[ ! -z ${BORKFILESTRING} ]]; then
        # Execute $BORKFILESTRING
        bork ${COMMAND} ${BORKFILESTRING}
    fi
fi

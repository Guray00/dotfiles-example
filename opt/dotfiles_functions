function check_symlink(){
    from="$1"
    to="$2"
    label="$3"

    # If no label is passed, use "symlink" as default
    if [[ -z ${label} ]]; then
        label="symlink"
    fi

    # Check if symlink exists, if not => recreate
    if [[ ! -h "${to}" ]]; then
        echo "missing: ${label} ${to}"
        ln -sf "${from}" "${to}"
        echo "ok: ${label} ${to} -> ${from}"
    # Otherwise, check if the actual origin of the symlink still matches desired one
    else
        origin=$(readlink "${to}")
        if [[ "${from}" == "${origin}" ]]; then
            echo "ok: ${label} ${to} -> ${from}"
        else
            echo "wrong: ${label} ${to} -> ${origin}"
            ln -sf "${from}" "${to}"
            echo "ok: ${label} ${to} -> ${from}"
        fi
    fi
}

function check_directory(){
    folder="$1"
    label="$2"

    # If no label is passed, use "symlink" as default
    if [[ -z ${label} ]]; then
        label="directory"
    fi

    # Check if symlink exists, if not => recreate
    if [[ ! -d "${folder}" ]]; then
        echo "missing: ${label} ${folder}"
        mkdir -p "${folder}"
        echo "ok: ${label} ${folder}"
    else
        echo "ok: ${label} ${folder}"
    fi
}

function check_curl(){
    url="$1"
    to="$2"
    label="$3"

    # If no label is passed, use "symlink" as default
    if [[ -z ${label} ]]; then
        label="cURL"
    else
        label="cURL ${label}"
    fi

    # Check if file exists, if not => curl download
    if [[ ! -f "${to}" ]]; then
        echo "missing: ${label} ${to}"
        curl "${url}" -o "${to}" 2>/dev/null
        echo "ok: ${label} ${url} -> ${to}"
    else
        echo "ok: ${label} ${url} -> ${to}"
    fi
}
